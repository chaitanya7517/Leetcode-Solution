int minCostConnectPoints(vector<vector<int>>& points) {
        int n= points.size();
        vector<vector<int>> adj(n,vector<int>(n,0));

        //create a 2D matrix i.e Adjacancy matrix
        for(int i=0;i<n;i++) {
            for(int j=i;j<n;j++) {
                int d= abs(points[i][0]-points[j][0]) + abs(points[i][1]-points[j][1]);
                adj[i][j]= adj[j][i]= d;
            }
        }

        //create a array which store a perticular vertex is include or not
        vector<bool> inset(n,false);
        //create a key array which store minimum distances and initialilze it with INT_MAX;
        vector<int> key(n,INT_MAX);
        key[0]=0;    //starting point

        int res=0;
        for(int cnt=0;cnt<n;cnt++) {
            int u=-1;
            for(int i=0;i<n;i++) {
                if(inset[i]==false and (u==-1 || key[i]<key[u])) {
                    u=i;
                }
            }

            inset[u]=true;
            res+=key[u];
            for(int i=0;i<n;i++) {
                if(inset[i]==false and adj[u][i]!=0) {
                    key[i]= min(key[i],adj[u][i]);
                }
            }
        }
        return res;
    }
