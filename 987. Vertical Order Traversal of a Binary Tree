class Solution {
public:

    map<int,vector<pair<int,int>>> mp;

    static bool cmp(pair<int,int>&a,pair<int,int>&b){
        if(a.first==b.first) return a.second<b.second;
        return a.first<b.first;
    }

    void solve(TreeNode *root,int col,int row){
        if(root){
            mp[col].push_back({row,root->val});
            solve(root->left,col-1,row+1);
            solve(root->right,col+1,row+1);
        }
    }

    vector<vector<int>> verticalTraversal(TreeNode* root) {
        mp.clear();
        solve(root,0,0);

        vector<vector<int>> ans;
        for(auto x:mp){
            vector<pair<int,int>> v=x.second;
            sort(v.begin(),v.end(),cmp);

            vector<int> temp;
            for(auto item:v){
                temp.push_back(item.second);
            }

            ans.push_back(temp);
        }

        return ans;
    }
};
